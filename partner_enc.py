# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Dec 14 06:58:01 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))